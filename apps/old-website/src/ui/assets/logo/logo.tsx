'use client';

import React from 'react';

import { LOGO_COLORS } from './constants';

export type LogoProps = {
	color: 'white-only' | 'black-only' | 'colorful-white' | 'colorful-black';
} & React.ComponentPropsWithoutRef<'svg'>;

const getLogoColors = (color: LogoProps['color']) => {
	switch (color) {
		case 'colorful-black':
			return {
				primary: LOGO_COLORS.primary,
				secondary: LOGO_COLORS.secondary,
				tertiary: LOGO_COLORS.tertiary,
				text: LOGO_COLORS.black,
			};
		case 'colorful-white':
			return {
				primary: LOGO_COLORS.primary,
				secondary: LOGO_COLORS.secondary,
				tertiary: LOGO_COLORS.tertiary,
				text: LOGO_COLORS.white,
			};

		case 'black-only':
			return {
				primary: LOGO_COLORS.black,
				secondary: LOGO_COLORS.black,
				tertiary: LOGO_COLORS.black,
				text: LOGO_COLORS.black,
			};
		case 'white-only':
			return {
				primary: LOGO_COLORS.white,
				secondary: LOGO_COLORS.white,
				tertiary: LOGO_COLORS.white,
				text: LOGO_COLORS.white,
			};
	}
};

type LogoGradientProps = {
	id: string;
	colors: {
		primary: string;
		secondary: string;
		tertiary: string;
	};
};
const LogoGradient = ({ colors, id }: LogoGradientProps) => {
	return (
		<defs>
			<linearGradient
				id={id}
				x1="2.3502e-07"
				y1="15.5"
				x2="15"
				y2="15.5"
				gradientUnits="userSpaceOnUse">
				<stop stopColor={colors.primary} />
				<stop offset="0.5" stopColor={colors.secondary} />
				<stop offset="1" stopColor={colors.tertiary} />
			</linearGradient>
		</defs>
	);
};

const LogoOnly = ({ color, ...props }: LogoProps) => {
	const { primary, secondary, tertiary, text } = getLogoColors(color);
	const id = React.useId();
	return (
		<svg
			width="30"
			height="30"
			viewBox="0 0 30 30"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			{...props}>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M0.027256 15.0672C0.027256 15.8633 0.343393 16.6255 0.911998 17.1903C1.44901 17.7483 2.23849 18.068 3.02822 18.068C5.61853 18.068 9.40873 18.068 11.999 18.068C12.7888 18.068 13.5467 17.7483 14.1153 17.1903C14.6839 16.6255 15 15.8633 15 15.0672C15 14.2779 14.6839 13.5158 14.1153 12.951C13.5467 12.393 12.7888 12.0732 11.999 12.0732C9.40873 12.0732 5.61853 12.0732 3.02822 12.0732C2.23849 12.0732 1.44901 12.393 0.911998 12.951C0.343393 13.5158 0.027256 14.2779 0.027256 15.0672Z"
				fill={`url(#${id})`}
			/>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M7.62939e-06 1.25886C7.62939e-06 0.925432 0.135992 0.605642 0.367348 0.367483C0.605509 0.129322 0.925432 7.62939e-06 1.25886 7.62939e-06C4.86529 7.62939e-06 14.9837 7.62939e-06 14.9837 7.62939e-06C23.2513 7.62939e-06 29.9607 6.70931 29.9607 14.9769C29.9607 23.2445 23.2513 29.9607 14.9837 29.9607C14.9837 29.9607 10.8804 29.9607 8.75056 29.9607C8.05649 29.9607 7.49171 29.3959 7.49171 28.7018C7.49171 27.6812 7.49171 26.2454 7.49171 25.2247C7.49171 24.5307 8.05649 23.9659 8.75056 23.9659C10.8804 23.9659 14.9837 23.9659 14.9837 23.9659C19.9442 23.9659 23.9726 19.9374 23.9726 14.9769C23.9726 10.0163 19.9442 5.98805 14.9837 5.98805C14.9837 5.98805 4.86529 5.98805 1.25886 5.98805C0.925432 5.98805 0.605509 5.85874 0.367348 5.62058C0.135992 5.38922 7.62939e-06 5.0694 7.62939e-06 4.73598C7.62939e-06 3.71529 7.62939e-06 2.27955 7.62939e-06 1.25886Z"
				fill={text}
			/>
			<LogoGradient id={id} colors={{ primary, secondary, tertiary }} />
		</svg>
	);
};

const LogoWithText = ({ color, ...props }: LogoProps) => {
	const { primary, secondary, tertiary, text } = getLogoColors(color);
	const id = React.useId();
	return (
		<svg
			width="168"
			height="30"
			viewBox="0 0 168 30"
			fill="none"
			xmlns="http://www.w3.org/2000/svg"
			{...props}>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M0.563877 15.0672C0.563877 15.8633 0.880014 16.6255 1.44862 17.1903C1.98563 17.7483 2.77511 18.068 3.56484 18.068C6.15515 18.068 9.94535 18.068 12.5357 18.068C13.3254 18.068 14.0833 17.7483 14.6519 17.1903C15.2205 16.6255 15.5366 15.8633 15.5366 15.0672C15.5366 14.2779 15.2205 13.5158 14.6519 12.951C14.0833 12.393 13.3254 12.0732 12.5357 12.0732C9.94535 12.0732 6.15515 12.0732 3.56484 12.0732C2.77511 12.0732 1.98563 12.393 1.44862 12.951C0.880014 13.5158 0.563877 14.2779 0.563877 15.0672Z"
				fill={`url(#${id})`}
			/>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M0.536629 1.25886C0.536629 0.925432 0.672613 0.605642 0.903969 0.367483C1.14213 0.129322 1.46205 7.62939e-06 1.79548 7.62939e-06C5.40191 7.62939e-06 15.5203 7.62939e-06 15.5203 7.62939e-06C23.7879 7.62939e-06 30.4973 6.70931 30.4973 14.9769C30.4973 23.2445 23.7879 29.9607 15.5203 29.9607C15.5203 29.9607 11.417 29.9607 9.28718 29.9607C8.59311 29.9607 8.02833 29.3959 8.02833 28.7018C8.02833 27.6812 8.02833 26.2454 8.02833 25.2247C8.02833 24.5307 8.59311 23.9659 9.28718 23.9659C11.417 23.9659 15.5203 23.9659 15.5203 23.9659C20.4808 23.9659 24.5093 19.9374 24.5093 14.9769C24.5093 10.0163 20.4808 5.98805 15.5203 5.98805C15.5203 5.98805 5.40191 5.98805 1.79548 5.98805C1.46205 5.98805 1.14213 5.85874 0.903969 5.62058C0.672613 5.38922 0.536629 5.0694 0.536629 4.73598C0.536629 3.71529 0.536629 2.27955 0.536629 1.25886Z"
				fill={text}
			/>
			<path
				d="M49.1692 29.9893C46.3403 29.9893 43.7712 29.3371 41.4679 28.0384C39.1646 26.7339 37.3398 24.9829 35.9933 22.7852C34.6527 20.5816 33.9793 18.1076 33.9793 15.3575C33.9793 12.6133 34.6231 10.1394 35.9165 7.93579C37.2039 5.73221 38.9522 3.98119 41.1668 2.68255C43.3815 1.3839 45.85 0.731689 48.5726 0.731689C51.2952 0.731689 53.7108 1.40144 55.8132 2.73534C57.9216 4.07512 59.581 5.8793 60.7976 8.15339C62.0142 10.4275 62.6224 13.0129 62.6224 15.904C62.6224 15.904 62.6224 16.2801 62.6224 16.6973C62.6224 17.0029 62.4986 17.2966 62.2801 17.514C62.0616 17.7314 61.7721 17.8549 61.465 17.8549C57.0593 17.8549 41.6038 17.8549 41.6038 17.8549C41.9286 18.9714 42.466 19.9822 43.2101 20.8871C43.9542 21.7862 44.8815 22.4912 45.9858 22.9966C47.0961 23.5019 48.2833 23.7547 49.5531 23.7547C50.8228 23.7547 51.9922 23.5607 53.067 23.1612C53.6458 22.9437 54.1831 22.6853 54.6674 22.3738C55.4056 21.9037 56.3623 21.9858 57.0119 22.5676C57.5966 23.0964 58.3112 23.7488 58.9608 24.3364C59.4038 24.736 59.6341 25.3235 59.5809 25.917C59.5337 26.5164 59.203 27.0512 58.6951 27.3744C57.5966 28.0619 56.4805 28.6085 55.3525 29.014C53.5158 29.6603 51.4606 29.9893 49.1692 29.9893ZM41.4974 12.5429H55.2697C55.0158 11.4264 54.5551 10.4392 53.8818 9.59307C53.2086 8.74102 52.4114 8.07094 51.4842 7.58322C50.5629 7.10137 49.5352 6.85466 48.4072 6.85466C47.2497 6.85466 46.1926 7.08971 45.2536 7.5598C44.3087 8.0299 43.5172 8.68813 42.8853 9.5343C42.2475 10.3864 41.7868 11.3853 41.4974 12.5429Z"
				fill={text}
			/>
			<path
				d="M81.2968 29.9893C78.462 29.9893 75.8989 29.3371 73.5897 28.0384C71.2865 26.7339 69.4615 24.9829 68.1209 22.7852C66.7744 20.5816 66.1069 18.1076 66.1069 15.3575C66.1069 12.6133 66.7508 10.1394 68.0383 7.93579C69.3257 5.73221 71.0798 3.98119 73.2944 2.68255C75.5091 1.3839 77.9716 0.731689 80.6942 0.731689C83.4168 0.731689 85.8324 1.40144 87.9408 2.73534C90.0433 4.07512 91.7026 5.8793 92.9192 8.15339C94.1358 10.4275 94.7442 13.0129 94.7442 15.904C94.7442 15.904 94.7442 16.2801 94.7442 16.6973C94.7442 17.0029 94.6203 17.2966 94.4077 17.514C94.1892 17.7314 93.8937 17.8549 93.5866 17.8549C89.1809 17.8549 73.7254 17.8549 73.7254 17.8549C74.0561 18.9714 74.5878 19.9822 75.3319 20.8871C76.0761 21.7862 77.0033 22.4912 78.1077 22.9966C79.218 23.5019 80.4049 23.7547 81.6747 23.7547C82.9444 23.7547 84.1197 23.5607 85.1886 23.1612C85.7674 22.9437 86.3048 22.6853 86.795 22.3738C87.5273 21.9037 88.49 21.9858 89.1337 22.5676C89.7184 23.0964 90.4389 23.7488 91.0827 24.3364C91.5315 24.736 91.7617 25.3235 91.7085 25.917C91.6554 26.5164 91.3248 27.0512 90.8169 27.3744C89.7243 28.0619 88.608 28.6085 87.4741 29.014C85.6433 29.6603 83.5823 29.9893 81.2968 29.9893ZM73.6193 12.5429H87.3915C87.1376 11.4264 86.6769 10.4392 86.0037 9.59307C85.3363 8.74102 84.5331 8.07094 83.6118 7.58322C82.6846 7.10137 81.6569 6.85466 80.5348 6.85466C79.3714 6.85466 78.3201 7.08971 77.3752 7.5598C76.4303 8.0299 75.6449 8.68813 75.0071 9.5343C74.3693 10.3864 73.9086 11.3853 73.6193 12.5429Z"
				fill={text}
			/>
			<path
				d="M113.418 29.9893C110.589 29.9893 108.02 29.3371 105.717 28.0384C103.408 26.7339 101.589 24.9829 100.242 22.7852C98.9017 20.5816 98.2286 18.1076 98.2286 15.3575C98.2286 12.6133 98.8723 10.1394 100.16 7.93579C101.447 5.73221 103.201 3.98119 105.416 2.68255C107.631 1.3839 110.099 0.731689 112.822 0.731689C115.544 0.731689 117.954 1.40144 120.062 2.73534C122.165 4.07512 123.83 5.8793 125.047 8.15339C126.257 10.4275 126.866 13.0129 126.866 15.904C126.866 15.904 126.866 16.2801 126.866 16.6973C126.866 17.0029 126.748 17.2966 126.529 17.514C126.311 17.7314 126.015 17.8549 125.708 17.8549C121.309 17.8549 105.853 17.8549 105.853 17.8549C106.178 18.9714 106.715 19.9822 107.459 20.8871C108.204 21.7862 109.125 22.4912 110.235 22.9966C111.34 23.5019 112.532 23.7547 113.802 23.7547C115.072 23.7547 116.241 23.5607 117.31 23.1612C117.895 22.9437 118.426 22.6853 118.917 22.3738C119.655 21.9037 120.611 21.9858 121.255 22.5676C121.846 23.0964 122.56 23.7488 123.21 24.3364C123.653 24.736 123.883 25.3235 123.83 25.917C123.777 26.5164 123.452 27.0512 122.944 27.3744C121.846 28.0619 120.73 28.6085 119.602 29.014C117.765 29.6603 115.704 29.9893 113.418 29.9893ZM105.741 12.5429H119.519C119.265 11.4264 118.798 10.4392 118.131 9.59307C117.458 8.74102 116.661 8.07094 115.733 7.58322C114.806 7.10137 113.785 6.85466 112.657 6.85466C111.493 6.85466 110.442 7.08971 109.497 7.5598C108.558 8.0299 107.766 8.68813 107.129 9.5343C106.497 10.3864 106.03 11.3853 105.741 12.5429Z"
				fill={text}
			/>
			<path
				fillRule="evenodd"
				clipRule="evenodd"
				d="M167.098 4.87505C167.098 5.93521 166.235 6.8001 165.163 6.8001C163.143 6.8001 160.025 6.8001 158.287 6.8001C157.515 6.8001 156.822 7.25543 156.515 7.95787C154.803 11.9188 149.213 24.862 147.501 28.823C147.194 29.5319 146.494 29.9871 145.723 29.9871C144.435 29.9871 142.448 29.9871 141.16 29.9871C140.389 29.9871 139.689 29.5319 139.382 28.823C137.552 24.5433 131.159 9.66199 128.524 3.52215C128.269 2.93028 128.335 2.25381 128.688 1.71397C129.047 1.17413 129.655 0.848877 130.303 0.848877C131.564 0.848877 132.976 0.848877 133.97 0.848877C134.754 0.848877 135.46 1.31722 135.754 2.03917C137.545 6.35137 143.579 20.9205 143.579 20.9205C143.579 20.9205 149.553 6.42947 151.331 2.12378C151.626 1.40182 152.332 0.933481 153.116 0.933481C155.803 0.933481 162.006 0.933481 165.163 0.933481C165.68 0.933481 166.17 1.13521 166.53 1.49293C166.896 1.85716 167.098 2.34486 167.098 2.85218C167.098 3.50259 167.098 4.22464 167.098 4.87505Z"
				fill={text}
			/>
			<LogoGradient id={id} colors={{ primary, secondary, tertiary }} />
		</svg>
	);
};

export const Logo = {
	LogoOnly,
	LogoWithText,
};
