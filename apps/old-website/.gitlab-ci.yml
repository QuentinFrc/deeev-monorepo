stages:
  - prepare
  - lint
  - test
  - build
  - deploy
  - performance
  - release

include:
  - project: 'deeev-pro/templates-ci/docker-build'
    file: 'templates/build-docker.yml'
    ref: 1.3.1

  - project: 'deeev-pro/templates-ci/eslint'
    file: 'templates/eslint.yml'
    ref: 1.4.0

  - project: 'deeev-pro/templates-ci/prettier'
    file: 'templates/prettier.yml'
    ref: 1.1.0

  - project: 'deeev-pro/templates-ci/chromatic'
    file: 'templates/chromatic.yml'
    ref: 1.2.3

  - project: 'deeev-pro/templates-ci/semantic-release'
    file: '/templates/release.yml'
    ref: 1.1.5

  - project: 'deeev-pro/templates-ci/deployment'
    file: '/templates/deployment.yml'
    ref: 1.1.1

  - project: 'deeev-pro/templates-ci/node.js'
    file: '/templates/prepare.yml'
    ref: 1.4.1

  - project: 'deeev-pro/templates-ci/node.js'
    file: '/templates/build.yml'
    ref: 1.4.1

  # - project: 'deeev-pro/templates-ci/lighthouse'
  #   file: '/templates/lighthouse.yml'
  #   ref: 1.1.0

.with-pnpm: &install_pnpm
  - corepack enable
  - corepack prepare pnpm@latest-9 --activate
  - pnpm config set store-dir .pnpm-store

.with-npmtoken: &install_package_token
  - echo "@deeev-pro:registry=https://${CI_SERVER_HOST}/api/v4/projects/52187352/packages/npm/">>.npmrc
  - echo "//${CI_SERVER_HOST}/api/v4/projects/52187352/packages/npm/:_authToken=${CI_JOB_TOKEN}">>.npmrc

prepare:
  extends: .prepare-without-image
  image: node:21.7.3-alpine
  before_script:
    - *install_package_token

build:
  extends: .build-without-image
  image: node:21.7.3-alpine
  dependencies:
    - prepare
  needs: ['prepare']

eslint:
  extends: .eslint-without-image
  image: node:21.7.3-alpine
  dependencies:
    - prepare
  needs: ['prepare']

prettier:
  extends: .prettier-without-image
  image: node:21.7.3-alpine
  dependencies:
    - prepare
  needs: ['prepare']

chromatic:
  extends: .chromatic-without-image
  image: node:21.7.3-alpine
  dependencies:
    - prepare
  needs: ['prepare']

build docker:
  needs: ['eslint', 'prettier', 'build']
  dependencies:
    - build

tag docker:
  needs: ['build docker', 'semantic_release']
  dependencies:
    - semantic_release

deploy dev:
  needs: ['build docker']

# lighthouse:
#   extends: .lighthouse-without-image
#   image: cypress/browsers:node-20.9.0-chrome-118.0.5993.88-1-ff-118.0.2-edge-118.0.2088.46-1
#   needs: ['deploy dev']
#   variables:
#     KUBERNETES_MEMORY_REQUEST: '1Gi'
#     KUBERNETES_CPU_REQUEST: '1'

semantic_release:
  needs: ['deploy dev']
